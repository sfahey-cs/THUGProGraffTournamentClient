<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bgWorker.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Settings.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACQAAAAkCAYAAADhAJiYAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAABMNJREFUWEfNmN1TVVUYxh2uGBrLC04FJMMRmvoH6qILRxzrUgVPKY0VWPkFMnqj
        VsyAgnpddtmNjnwYB1JEkdgePpK4wZkalbv8B7QuxGrgfLy+v7X3xnPOPuzz4bF4Zp5ZrLXe93nftc/6
        ZJ2IrClmbPw/+eyPwvGx8gflgFM2KQtCMRL65KWyMtlWXy9bNm82JXVt32t354diJGTt2rlT7t65E78d
        icjd+fl4w/btiFl2d37INaGgcouyzNRSMf/NyZMybVmJoYEBmdLyqxMnEJu3u1OAPzqbTC0Dckloj/Jx
        mf0z3FO+R6ODV5R/njl9WmZu3TIJUVLX9r+cfhf43XN0HiszzrNsCeEkbYcOCcFCDQ0YwVanb+GNqirp
        v3gxPjYyYmwoqdOu/feVTHjsjT826FFXepLySyhYUlISO3zwoMzNzMRmLEtmJyeX2ltbpXrjRqmurpam
        3bvlx97e2M+jozLY12eCUVKnnX7ssMcPf3RUL0pSqh8njh3Ohl9C75eWlpogiGgAuTI4KNbYmIwMDS1d
        Gx5ejty8mRi3gxu74cuXTUmddvqxwx4//OlDb0ht0SeOHc6GX0IblA8adQXpyJavhsMS7u83QRGG1GnX
        CS2/RCLxqYmJKCV11961xc/Y69+zU1PLu+yf/4ETZwV+CYF3lf+2t7VFGSGj4gu4iTFSDbzU2dEhR9vb
        5Yt9+0xJnXb63UTwg9aNG4Ieuo5+CrIlBPYHAgHRT7+08lW0nJueTnR3dkptbS2Oi8pZ5ahTLtLe09Vl
        7JL90AmUl+OzX+lBLgmFKisqEFpG+CcdMUEOHziAA/xW+RaGSaBOu7SqHfb44Y9OheppXwjDdGRLKKBc
        +CgUksnx8QSj5Gc4c+qUm8ynGPngM6WcZZ+amDBfCR30tH1BiX4KMiXUrLym/E35iP1El7JZTXzykXA4
        WlNTg/F3ylxwPqj2utKi+KODnrNPPVISh3jE9STU9PL69dKwY4dwHJzr6ZE+3eScfcWspq6ODvaOv5Wv
        4pADXlf+gx/+6KCHLvrEIR5x1W5PekKXtm3dag5KXcJGgJ3X3fRY0sd0FakdEzcfzB07csT4o4MeuugT
        h3jEVbtLnoS4QnBqu8vUpbPMYy3NzRhewTgPXP28pYUEYuikaxOPuGrnSag32xdin1G7XzHOA3N82UK+
        0IuYQ68pvXPowoVELnMIZF1lrBrtO6/MBd9vCga9q6yyEo2Hyt+VxGOLsPNISygZGfch9hVth0bEBwxO
        znZ3G78M+1A5RsnIlhDIuFOzA2sfZD96G8MkUKe96Ds18JxllATp1rOqzj7LniiZ6JxllE/erKuTHt3R
        sUv2Qwc9tSnoLHtHaZ/2ekqnn/ZMUu46OmHNKf+lc9pTp53+Yp723FP+MPchvb8wId1EGKk76uT70PQL
        vg+temPkszMXinRj/MAOZ8MvIXOn5u7LHRgRHZl9p+ae7Henvn7dtHvu1OqPTqF3arDy6mD0HzY2YgR9
        Xx1splX2PsOrAzvz6sAfnaRXBy+SFGRLCCC46LynCPA877L7jg43TE8yIJeEAC/NVV+uX6e/XI8fR2y1
        l2u98rlertlgsRL/67e9H/autf9+AOZZ8f8/tDYo654CQPuDuJ6fUu4AAAAASUVORK5CYII=
</value>
  </data>
</root>